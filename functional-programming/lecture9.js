// Sorting Array
const arr = [100, 5, 78, 3, 8];
arr.sort((a, b) => a - b);
arr;

var people = [
  { name: "HM Nayem", age: 22 },
  { name: "Abir Azim", age: 23 },
  { name: "Jubel Ahmed", age: 18 },
  { name: "Al Rafi", age: 19 },
  { name: "Mr. X", age: 33 },
  { name: "Mr. Y", age: 27 },
];
// sort age
people.sort((a, b) => {
  return a.age - b.age;
});
// sort by Name
people.sort((a, b) => {
  if (a.name > b.name) return 1; // Descending Z -> A
  if (a.name < b.name) return -1; // Ascending A -> Z
  return 0;
});

people;

// ‡¶â‡¶™‡¶∞‡ßá‡¶∞ ‡¶ï‡ßã‡¶°‡¶ï‡ßá ternary operator ‡¶¨‡¶æ localeCompare() ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶õ‡ßã‡¶ü ‡¶ï‡¶∞‡ßá ‡¶≤‡ßá‡¶ñ‡¶æ ‡¶Ø‡¶æ‡ßü‚Äî
// ‚úî localeCompare() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶¶‡ßÅ‡¶ü‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶§‡ßÅ‡¶≤‡¶®‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßç‡¶¨‡ßü‡¶Ç‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶≠‡¶æ‡¶¨‡ßá -1, 0, ‡¶¨‡¶æ 1 ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá‡•§

// üîπ a.name > b.name ‡¶π‡¶≤‡ßá:
// 	‚Ä¢	‡¶Æ‡¶æ‡¶®‡ßá a alphabetically ‡¶¨‡ßú (Z-‡¶è‡¶∞ ‡¶ï‡¶æ‡¶õ‡¶æ‡¶ï‡¶æ‡¶õ‡¶ø)‡•§
// 	‚Ä¢	‡¶§‡¶æ‡¶á b ‡¶Ü‡¶ó‡ßá ‡¶Ü‡¶∏‡¶¨‡ßá‡•§
// 	‚Ä¢	‡¶è‡¶ú‡¶®‡ßç‡¶Ø return 1; ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§

// üîπ a.name < b.name ‡¶π‡¶≤‡ßá:
// 	‚Ä¢	‡¶Æ‡¶æ‡¶®‡ßá a alphabetically ‡¶õ‡ßã‡¶ü (A-‡¶è‡¶∞ ‡¶ï‡¶æ‡¶õ‡¶æ‡¶ï‡¶æ‡¶õ‡¶ø)‡•§
// 	‚Ä¢	‡¶§‡¶æ‡¶á a ‡¶Ü‡¶ó‡ßá ‡¶Ü‡¶∏‡¶¨‡ßá‡•§
// 	‚Ä¢	‡¶è‡¶ú‡¶®‡ßç‡¶Ø return -1; ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§

// üîπ a.name === b.name ‡¶π‡¶≤‡ßá:
// 	‚Ä¢	‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶® ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶®‡ßá‡¶á, ‡¶§‡¶æ‡¶á return 0;

people.sort((a, b) => a.name.localeCompare(b.name));
